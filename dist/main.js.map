{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/tesseract.js/src/browser/index.js","webpack:///./node_modules/tesseract.js/src/common/circularize.js","webpack:///./node_modules/tesseract.js/src/common/job.js","webpack:///./node_modules/tesseract.js/src/index.js","webpack:///./src/main.js","webpack:///./src/models/Image/GrayscaleImage.model.js","webpack:///./src/models/Image/Image.model.js","webpack:///./src/models/Image/RGBAImage.model.js","webpack:///./src/models/layout/viewer.model.js","webpack:///./src/transformations/OCR/tesseract.ocr.js","webpack:///./src/transformations/converters/GrayscaleToImageData.converter.js","webpack:///./src/transformations/converters/RGBAToGrayscale.converter.js","webpack:///./src/transformations/converters/RGBAToImageData.converter.js","webpack:///./src/transformations/filters/threshold.filter.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qCAAqC;;AAErC;AACA;AACA;;AAEA,2BAA2B;AAC3B;AACA;AACA;AACA,4BAA4B,UAAU;;;;;;;;;;;;;;;;;;;;;;;ACvLtC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;AACD,kBAAkB,mBAAO,CAAC,oEAAoB;AAC9C;AACA;;AAEA;;;AAGA;AACA;AACA,gFAAgF;AAChF;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;;AAGA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,+BAA+B,SAAS;AACxC;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,gCAAgC,SAAS,G;;AAEzC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,2BAA2B,SAAS,G;AACpC;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;;;;;;;;;;;;ACxGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT,KAAK;AACL;AACA,C;;;;;;;;;;;AC9DA,gBAAgB,mBAAO,CAAC,0EAAkB;;AAE1C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AChFA,gBAAgB,mBAAO,CAAC,yEAAiB;AACzC,oBAAoB,mBAAO,CAAC,sFAAyB;AACrD,qBAAqB,mBAAO,CAAC,mEAAc;AAC3C,gBAAgB,mBAAO,CAAC,iEAAiB;;AAEzC,0CAA0C;AAC1C,kDAAkD;AAClD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,8BAA8B;AAC9B;AACA,+CAA+C;AAC/C;;AAEA,2BAA2B,oDAAoD;AAC/E,GAAG;AACH;AACA,2BAA2B;AAC3B;AACA,wBAAwB,oDAAoD;AAC5E,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AC1EA,gBAAgB,mBAAO,CAAC,yEAA8B;AACtD,mBAAmB,mBAAO,CAAC,6EAAgC;AAC3D;AACA,qBAAqB,mBAAO,CAAC,6HAAwD;AACrF,SAAS,mBAAO,CAAC,uFAAqC;AACtD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,kC;;AAEA;;AAEA,sBAAsB,mBAAmB;AACzC,iE;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,IAAI,IAA6B;AACjC;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;AC3HA,mBAAmB,mBAAO,CAAC,gEAAmB;;AAE9C;AACA,6BAA6B;AAC7B;AACA;AACA;;AAEA;AACA,0BAA0B,mBAAO,CAAC,2IAAiE;AACnG;AACA;;AAEA;AACA,uBAAuB,mBAAO,CAAC,yGAAgD;AAC/E;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA,gC;;;;;;;;;;;ACtBA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,4B;;;;;;;;;;;ACtDA,mBAAmB,mBAAO,CAAC,wDAAe;;AAE1C;AACA,6BAA6B;AAC7B;AACA;AACA;;AAEA;AACA,0BAA0B,mBAAO,CAAC,iIAA4D;AAC9F;AACA;AACA;;AAEA,2B;;;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,wB;;;;;;;;;;;ACjDA,kBAAkB,mBAAO,CAAC,8DAAc;;AAExC;AACA;AACA;AACA;AACA,QAAQ;;AAER;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,C;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,mBAAmB,yBAAyB;AAC5C;AACA;AACA;AACA;AACA;;AAEA;AACA,E;;;;;;;;;;;AClBA,uBAAuB,mBAAO,CAAC,2FAAyC;;AAExE;AACA,+C;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,kBAAkB,yBAAyB;AAC3C;AACA;AACA;AACA;AACA,2C;;;AAGA;AACA;;AAEA;;AAEA;AACA,E;;;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,mBAAmB,yBAAyB;AAC5C;AACA;;AAEA;AACA,E;;;;;;;;;;;AChBA,6CAA6C;AAC7C;AACA,qC;;AAEA;AACA;AACA;;;AAGA;;AAEA,kBAAkB,mBAAmB;AACrC,6D;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,C","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/main.js\");\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","var defaultOptions = {\n    // workerPath: 'https://cdn.jsdelivr.net/gh/naptha/tesseract.js@0.2.0/dist/worker.js',\n    corePath: 'https://cdn.jsdelivr.net/gh/naptha/tesseract.js-core@0.1.0/index.js',    \n    langPath: 'https://tessdata.projectnaptha.com/3.02/',\n}\n\nif (process.env.TESS_ENV === \"development\") {\n    console.debug('Using Development Configuration')\n    defaultOptions.workerPath = location.protocol + '//' + location.host + '/dist/worker.dev.js?nocache=' + Math.random().toString(36).slice(3)\n}else{\n    var version = require('../../package.json').version;\n    defaultOptions.workerPath = 'https://cdn.jsdelivr.net/gh/naptha/tesseract.js@' + version + '/dist/worker.js'\n}\n\nexports.defaultOptions = defaultOptions;\n\n\nexports.spawnWorker = function spawnWorker(instance, workerOptions){\n    if(Blob && URL){\n        var blob = new Blob(['importScripts(\"' + workerOptions.workerPath + '\");'], {\n            type: 'application/javascript'\n        });\n        var worker = new Worker(URL.createObjectURL(blob));\n    }else{\n        var worker = new Worker(workerOptions.workerPath)\n    }\n\n    worker.onmessage = function(e){\n        var packet = e.data;\n        instance._recv(packet)\n    }\n    return worker\n}\n\nexports.terminateWorker = function(instance){\n    instance.worker.terminate()\n}\n\nexports.sendPacket = function sendPacket(instance, packet){\n    loadImage(packet.payload.image, function(img){\n        packet.payload.image = img\n        instance.worker.postMessage(packet) \n    })\n}\n\n\nfunction loadImage(image, cb){\n    if(typeof image === 'string'){\n        if(/^\\#/.test(image)){\n            // element css selector\n            return loadImage(document.querySelector(image), cb)\n        }else if(/(blob|data)\\:/.test(image)){\n            // data url\n            var im = new Image\n            im.src = image;\n            im.onload = e => loadImage(im, cb);\n            im.onerror = e => { throw e; };\n            return\n        }else{\n            var xhr = new XMLHttpRequest();\n            xhr.open('GET', image, true)\n            xhr.responseType = \"blob\";\n            \n            xhr.onload = e => {\n                if (xhr.status >= 400){\n                  throw new Error('Fail to get image as Blob');\n                }else{\n                    loadImage(xhr.response, cb);\n                }\n            };\n            xhr.onerror = e => { throw e; }; \n            \n            xhr.send(null)\n            return\n        }\n    }else if(image instanceof File){\n        // files\n        var fr = new FileReader()\n        fr.onload = e => loadImage(fr.result, cb);\n        fr.onerror = e => { throw e; }; \n        fr.readAsDataURL(image)\n        return\n    }else if(image instanceof Blob){\n        return loadImage(URL.createObjectURL(image), cb)\n    }else if(image.getContext){\n        // canvas element\n        return loadImage(image.getContext('2d'), cb)\n    }else if(image.tagName == \"IMG\" || image.tagName == \"VIDEO\"){\n        // image element or video element\n        var c = document.createElement('canvas');\n        c.width  = image.naturalWidth  || image.videoWidth;\n        c.height = image.naturalHeight || image.videoHeight;\n        var ctx = c.getContext('2d');\n        ctx.drawImage(image, 0, 0);\n        return loadImage(ctx, cb)\n    }else if(image.getImageData){\n        // canvas context\n        var data = image.getImageData(0, 0, image.canvas.width, image.canvas.height);\n        return loadImage(data, cb)\n    }else{\n        return cb(image)\n    }\n    throw new Error('Missing return in loadImage cascade')\n\n}\n","// The result of dump.js is a big JSON tree\n// which can be easily serialized (for instance\n// to be sent from a webworker to the main app\n// or through Node's IPC), but we want\n// a (circular) DOM-like interface for walking\n// through the data. \n\nmodule.exports = function circularize(page){\n    page.paragraphs = []\n    page.lines = []\n    page.words = []\n    page.symbols = []\n\n    page.blocks.forEach(function(block){\n        block.page = page;\n\n        block.lines = []\n        block.words = []\n        block.symbols = []\n\n        block.paragraphs.forEach(function(para){\n            para.block = block;\n            para.page = page;\n\n            para.words = []\n            para.symbols = []\n            \n            para.lines.forEach(function(line){\n                line.paragraph = para;\n                line.block = block;\n                line.page = page;\n\n                line.symbols = []\n\n                line.words.forEach(function(word){\n                    word.line = line;\n                    word.paragraph = para;\n                    word.block = block;\n                    word.page = page;\n                    word.symbols.forEach(function(sym){\n                        sym.word = word;\n                        sym.line = line;\n                        sym.paragraph = para;\n                        sym.block = block;\n                        sym.page = page;\n                        \n                        sym.line.symbols.push(sym)\n                        sym.paragraph.symbols.push(sym)\n                        sym.block.symbols.push(sym)\n                        sym.page.symbols.push(sym)\n                    })\n                    word.paragraph.words.push(word)\n                    word.block.words.push(word)\n                    word.page.words.push(word)\n                })\n                line.block.lines.push(line)\n                line.page.lines.push(line)\n            })\n            para.page.paragraphs.push(para)\n        })\n    })\n    return page\n}","const adapter = require('../node/index.js')\n\nlet jobCounter = 0;\n\nmodule.exports = class TesseractJob {\n    constructor(instance){\n        this.id = 'Job-' + (++jobCounter) + '-' + Math.random().toString(16).slice(3, 8)\n\n        this._instance = instance;\n        this._resolve = []\n        this._reject = []\n        this._progress = []\n        this._finally = []\n    }\n\n    then(resolve, reject){\n        if(this._resolve.push){\n            this._resolve.push(resolve) \n        }else{\n            resolve(this._resolve)\n        }\n\n        if(reject) this.catch(reject);\n        return this;\n    }\n    catch(reject){\n        if(this._reject.push){\n            this._reject.push(reject) \n        }else{\n            reject(this._reject)\n        }\n        return this;\n    }\n    progress(fn){\n        this._progress.push(fn)\n        return this;\n    }\n    finally(fn) {\n        this._finally.push(fn)\n        return this;  \n    }\n    _send(action, payload){\n        adapter.sendPacket(this._instance, {\n            jobId: this.id,\n            action: action,\n            payload: payload\n        })\n    }\n\n    _handle(packet){\n        var data = packet.data;\n        let runFinallyCbs = false;\n\n        if(packet.status === 'resolve'){\n            if(this._resolve.length === 0) console.log(data);\n            this._resolve.forEach(fn => {\n                var ret = fn(data);\n                if(ret && typeof ret.then == 'function'){\n                    console.warn('TesseractJob instances do not chain like ES6 Promises. To convert it into a real promise, use Promise.resolve.')\n                }\n            })\n            this._resolve = data;\n            this._instance._dequeue()\n            runFinallyCbs = true;\n        }else if(packet.status === 'reject'){\n            if(this._reject.length === 0) console.error(data);\n            this._reject.forEach(fn => fn(data))\n            this._reject = data;\n            this._instance._dequeue()\n            runFinallyCbs = true;\n        }else if(packet.status === 'progress'){\n            this._progress.forEach(fn => fn(data))\n        }else{\n            console.warn('Message type unknown', packet.status)\n        }\n\n        if (runFinallyCbs) {\n            this._finally.forEach(fn => fn(data));\n        }\n    }\n}\n","const adapter = require('./node/index.js')\nconst circularize = require('./common/circularize.js')\nconst TesseractJob = require('./common/job');\nconst version = require('../package.json').version;\n\nconst create = function(workerOptions = {}){\n\tvar worker = new TesseractWorker(Object.assign({}, adapter.defaultOptions, workerOptions));\n\tworker.create = create;\n\tworker.version = version;\n\treturn worker;\n}\n\nclass TesseractWorker {\n\tconstructor(workerOptions){\n\t\tthis.worker = null;\n\t\tthis.workerOptions = workerOptions;\n\t\tthis._currentJob = null;\n\t\tthis._queue = [];\n\t}\n\n\trecognize(image, options = {}){\n\t\treturn this._delay(job => {\n\t\t\tif (typeof options === 'string') options = {lang: options}\n\t\t\toptions.lang = options.lang || 'eng';\n\n\t\t\tjob._send('recognize', { image, options, workerOptions: this.workerOptions });\n\t\t})\n\t}\n\tdetect(image, options = {}){\n\t\treturn this._delay(job => {\n\t\t\tjob._send('detect', { image, options, workerOptions: this.workerOptions });\n\t\t})\n\t}\n\n\tterminate(){\n\t\tif(this.worker) adapter.terminateWorker(this);\n\t\tthis.worker = null;\n\t\tthis._currentJob = null;\n\t\tthis._queue = [];\n\t}\n\n\t_delay(fn){\n\t\tif(!this.worker) this.worker = adapter.spawnWorker(this, this.workerOptions);\n\n\t\tvar job = new TesseractJob(this);\n\t\tthis._queue.push(e => {\n\t\t\tthis._queue.shift();\n\t\t\tthis._currentJob = job;\n\t\t\tfn(job);\n\t\t});\n\t\tif(!this._currentJob) this._dequeue();\n\t\treturn job;\n\t}\n\n\t_dequeue(){\n\t\tthis._currentJob = null;\n\t\tif(this._queue.length){\n\t\t\tthis._queue[0]();\n\t\t}\n\t}\n\n\t_recv(packet){\n        if(packet.status === 'resolve' && packet.action === 'recognize'){\n            packet.data = circularize(packet.data);\n        }\n\n\t\tif(this._currentJob.id === packet.jobId){\n\t\t\tthis._currentJob._handle(packet)\n\t\t} else {\n\t\t\tconsole.warn('Job ID ' + packet.jobId + ' not known.')\n\t\t}\n\t}\n}\n\nmodule.exports = create();\n","window.Viewer = require('./models/layout/viewer.model');\nwindow.RGBAImage = require('./models/Image/RGBAImage.model');\nwindow.Transformations = {\n    RGBAToGrayscale: require('./transformations/converters/RGBAToGrayscale.converter'),\n    OCR: require('./transformations/OCR/tesseract.ocr')\n};\n\nclass MyCanvas {\n    constructor(canvas_id) {\n        this.dom_elt = document.getElementById(canvas_id);\n        this.context = this.dom_elt.getContext('2d');\n        this.image = null;\n        this.imageElt = null;\n    }\n\n    setSize(width, height) {\n        this.width = width;\n        //this.context.width = width;\n        this.dom_elt.width = width;\n        this.dom_elt.style.width = width  + 'px';\n\n        this.height = height;\n        // this.context.height = height;\n        this.dom_elt.height = height;\n        this.dom_elt.style.height = height + 'px';\n    }\n\n    clear() {\n        this.context.fillStyle = 'green';\n        this.context.fillRect(0, 0, this.width, this.height);\n    }\n\n    openImage(blob) {\n        const reader = new FileReader();\n        reader.onload = () => {\n            const image = new Image();\n            image.onload = () => {\n                this.setImage(image);\n            };\n\n            image.src = reader.result;\n        };\n\n        reader.readAsDataURL(blob);\n    }\n\n    loadImage(url) {\n        const imageElt = new Image();\n        image.crossOrigin = \"\";\n        image.src = url;\n        image.onload = () => {\n            this.setImage(image);\n        }\n    }\n\n    reset() {\n        this.drawImageData(this.getImage());\n    }\n\n    setImage(image) {\n        this.imageElt = image;\n        console.log(image.width, image.height)\n        this.setSize(image.width, image.height);\n        this.context.drawImage(image,0,0);\n\n        this.image = this.context.getImageData(0, 0, this.width, this.height);\n    }\n\n    drawImage(image) {\n        console.log(image)\n        this.context.drawImage(image, 0, 0);\n    }\n\n    sobel(image) {\n        \n\n            // todo grayscale\n        return output;\n    }\n\n    getGrayscale(image) {\n          \n    }\n\n    thresholding(threshold) {\n        const input = this.getGrayscale(this.getImage());\n        const pixels = input.data; \n\n        const output = this.context.createImageData(this.width, this.height);\n\n        for(var i = 0; i < pixels.length; i += 4) {\n            const intensity = (pixels[i] >= threshold) ? 255 : 0; \n\n            output.data[i] = intensity;\n            output.data[i + 1] = intensity;\n            output.data[i + 2] = intensity;\n            output.data[i + 3] = 255;\n\n        }\n\n        return output;\n    }\n\n    drawImageData(imageData) {\n        console.log('drawImageData', imageData);\n        this.context.putImageData(imageData, 0, 0);\n    }\n\n    getImage() {\n        return this.image;\n    }\n\n    threshold() {\n        //\n    }\n}\n\nif (typeof module !== 'undefined') {\n    module.exports = MyCanvas;\n}\n\nif (typeof window !== 'undefined') {\n    window.MyCanvas = MyCanvas;\n}\n","const BasicImage = require('./RGBAImage.model');\n\nclass GrayscaleImage extends BasicImage {\n    constructor(settings = {}) {\n        settings.nbChannels = 1;\n        super(settings);\n    }\n\n    getImageData() {\n        const converter = require('../../transformations/converters/GrayscaleToImageData.converter');\n        return converter(this);\n    }\n\n    threshold(threshold) {\n        const filter = require('../../transformations/filters/threshold.filter');\n        return filter(this, {\n            write: true,\n            threshold\n        });\n    }\n}\n\nmodule.exports = GrayscaleImage;","class BasicImage {\n    constructor(settings = {}) {\n        this.mimetype = '';\n        this.pixels = [];\n        this.nbChannel = 4;\n        this.resolution = {\n            x: settings.width || 0,\n            y: settings.height || 0\n        }\n\n        if (typeof settings.pixels === 'undefined') {\n            this.pixels = new Uint8Array(this.resolution.x * this.resolution.y * this.nbChannel);\n        }\n\n        else {\n            this.pixels = settings.pixels;\n        }\n    }\n\n    getPixels() {\n        return this.pixels;\n    }\n\n    getWidth() {\n        return this.resolution.x;\n    }\n\n    getHeight() {\n        return this.resolution.y;\n    }\n\n    getNbChannel() {\n        return this.nbChannel;\n    }\n\n    getImageData() {\n        throw new Error('Abstract method called \"BasicImage::getImageData\". Please overwrite in sub-class');\n    }\n\n    clone() {\n        const factory = this.constructor;\n        return new factory({\n            width: this.getWidth(),\n            height: this.getWidth()\n        });\n    }\n\n    render(context) {\n        const imageData = this.getImageData();\n        console.log(imageData);\n        context.putImageData(imageData, 0, 0);\n    }\n}\n\nmodule.exports = BasicImage;","const BasicImage = require('./Image.model');\n\nclass RGBAImage extends BasicImage {\n    constructor(settings = {}) {\n        settings.nbChannel = 4;\n        super(settings);\n    }\n\n    getImageData() {\n        const converter = require('../../transformations/converters/RGBAToImageData.converter');\n        return converter(this);\n    }\n}\n\nmodule.exports = RGBAImage;","class Viewer {\n    constructor(canvas_id) {\n        this.dom_elt = document.getElementById(canvas_id);\n        this.context = this.dom_elt.getContext('2d');\n        this.image = null;\n        this.imageElt = null;\n    }\n\n    setSize(width, height) {\n        console.log('set size', width, height);\n        // resolution\n        this.dom_elt.width = width;\n        this.dom_elt.height = height;\n\n        // physical pixels\n        this.dom_elt.style.width = width  + 'px';\n        this.dom_elt.style.height = height + 'px';\n    }\n\n    clear() {\n        this.context.fillStyle = 'green';\n        this.context.fillRect(0, 0, this.dom_elt.width, this.dom_elt.height);\n    }\n\n    getImage() {\n        return this.image;\n    }\n\n    setImage(image) {\n        this.image = image;\n        this.drawImage(image);\n        // this.setSize(image.getWidth(), image.getHeight());\n        // image.render(this.context);\n    }\n\n    reset() {\n        this.render(this.context);\n    }\n\n    drawImage(image) {\n        console.log('draw image', image)\n        // this.context.drawImage(image, 0, 0);\n        this.setSize(image.getWidth(), image.getHeight());\n        image.render(this.context);\n    }\n}\n\nwindow.Viewer = Viewer;\n\nmodule.exports = Viewer;","const Tesseract = require('tesseract.js');\n\nmodule.exports = function(image) {\n    console.log('begin works...');\n    // Tesseract.recognize(image).then(result => {\n    //     console.log('end !', result)\n    // });\n\n    Tesseract.recognize(image, {\n        // lang: 'fra'\n    })\n    .progress(message => console.log(message))\n    .catch(err => console.error(err))\n    .then(result => console.log(result))\n    .finally(resultOrError => console.log(resultOrError))\n}","module.exports = function(grayscaleImage) {\n    const context = document.createElement('canvas').getContext('2d');\n    const imageData = context.createImageData(\n        grayscaleImage.getWidth(),\n        grayscaleImage.getHeight()\n    );\n\n    const input_pixels = grayscaleImage.getPixels();\n    const output_pixels = imageData.data;\n    \n    for (let i = 0; i < input_pixels.length; i++) {\n        output_pixels[i * 4] = input_pixels[i];\n        output_pixels[i * 4 + 1] = input_pixels[i];\n        output_pixels[i * 4 + 2] = input_pixels[i];\n        output_pixels[i * 4 + 3] = 255;\n    }\n\n    return imageData;\n};","const GrayscaleImage = require('../../models/Image/GrayscaleImage.model');\n\nmodule.exports = function(RGBAImage) {\n    const input_pixels = RGBAImage.getPixels(); \n    const grayscale = new GrayscaleImage({\n        width: RGBAImage.getWidth(),\n        height: RGBAImage.getHeight()\n    });\n\n    const output_pixels = grayscale.getPixels();\n\n    for(let i = 0; i < input_pixels.length; i += 4) {\n        const intensity = Math.ceil((\n            0.30 * input_pixels[i] + \n            0.59 * input_pixels[i + 1] + \n            0.11 * input_pixels[i + 2]\n        ) * (input_pixels[i + 4] / 255.0)); \n        \n\n        output_pixels[i / 4] = intensity;\n    }\n\n    console.log('ouput ndg', output_pixels)\n\n    return grayscale;\n};","module.exports = function(basicImage) {\n    const context = document.createElement('canvas').getContext('2d');\n    const imageData = context.createImageData(\n        basicImage.getWidth(),\n        basicImage.getHeight()\n    );\n\n    const input_pixels = basicImage.getPixels();\n    const output_pixels = imageData.data;\n    \n    console.log(input_pixels,input_pixels.length)\n    for (let i = 0; i < input_pixels.length; i++) {\n        output_pixels[i] = Math.min(Math.max(0, input_pixels[i]), 255);\n    }\n\n    return imageData;\n};","module.exports = function(image, options = {}) {\n    console.log(image, image.getPixels());\n    const pixels = image.getPixels(); \n\n    const threshold = Number.isFinite(options) ? options : options.threshold;\n    const output = options.write === true ? image : image.clone();\n    const outputPixels = output.getPixels();\n\n\n    console.log('tr', threshold);\n\n    for(let i = 0; i < pixels.length; ++i) {\n        const intensity = (pixels[i] >= threshold) ? 255 : 0; \n\n        outputPixels[i] = intensity;\n        // outputPixels[i + 1] = intensity;\n        // outputPixels[i + 2] = intensity;\n        // outputPixels[i + 3] = 255;\n\n    }\n\n    return output;\n}"],"sourceRoot":""}