{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/main.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA,uBAAuB,qBAAqB;AAC5C;AACA,2BAA2B,sBAAsB;AACjD;AACA,+BAA+B,OAAO;AACtqC;;AAEA;;AAEA,sBAAsB,mBAAmB;AACzC,0F;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,yB;AACA;;AAEA;AACA;AACA,kC;;AAEA;;AAEA,sBAAsB,mBAAmB;AACzC,iE;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,IAAI,IAA6B;AACjC;AACA;;AAEA;AACA;AACA","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/main.js\");\n","class MyCanvas {\n    constructor(canvas_id) {\n        this.dom_elt = document.getElementById(canvas_id);\n        this.context = this.dom_elt.getContext('2d');\n        this.image = null;\n        this.imageElt = null;\n    }\n\n    setSize(width, height) {\n        this.width = width;\n        //this.context.width = width;\n        this.dom_elt.width = width;\n        this.dom_elt.style.width = width  + 'px';\n\n        this.height = height;\n        // this.context.height = height;\n        this.dom_elt.height = height;\n        this.dom_elt.style.height = height + 'px';\n    }\n\n    clear() {\n        this.context.fillStyle = 'green';\n        this.context.fillRect(0, 0, this.width, this.height);\n    }\n\n    openImage(blob) {\n        const reader = new FileReader();\n        reader.onload = () => {\n            const image = new Image();\n            image.onload = () => {\n                this.setImage(image);\n            };\n\n            image.src = reader.result;\n        };\n\n        reader.readAsDataURL(blob);\n    }\n\n    loadImage(url) {\n        const imageElt = new Image();\n        image.crossOrigin = \"\";\n        image.src = url;\n        image.onload = () => {\n            this.setImage(image);\n        }\n    }\n\n    reset() {\n        this.drawImageData(this.getImage());\n    }\n\n    setImage(image) {\n        this.imageElt = image;\n        console.log(image.width, image.height)\n        this.setSize(image.width, image.height);\n        this.context.drawImage(image,0,0);\n\n        this.image = this.context.getImageData(0, 0, this.width, this.height);\n    }\n\n    drawImage(image) {\n        console.log(image)\n        this.context.drawImage(image, 0, 0);\n    }\n\n    sobel(image) {\n        const pixels = image.data;\n        const output = this.context.createImageData(image.width, image.height);\n\n        const x_sobel = [\n            [-1, 0, 1],\n            [-2, 0, 2],\n            [-1, 0, 1]\n        ];\n\n\n        const y_sobel = [\n            [-1, -2, -1],\n            [0, 0, 0],\n            [1, 2, 1]\n        ];\n\n\n        const row_offset = image.width * 4;\n\n        for (let i = 1; i < image.width - 2; i++) {\n            const x_offset = i * 4;\n            for (let j = 1; j < image.height - 2; j++) {\n                const y_offset = j * row_offset;\n                for (let k = 0; k < 3; k++) {\n                    const pixel_x = \n                    (\n                        x_sobel[0][0] * pixels[\n                            y_offset - row_offset + \n                            x_offset - 4 +\n                            k\n                        ]\n                    ) + (\n                        x_sobel[0][1] * pixels[\n                            y_offset - row_offset + \n                            x_offset +\n                            k\n                        ]\n                    ) + (\n                        x_sobel[0][2] * pixels[\n                            y_offset - row_offset + \n                            x_offset + 4 +\n                            k\n                        ]\n                    ) + (\n                        x_sobel[1][0] * pixels[\n                            y_offset + \n                            x_offset - 4 +\n                            k\n                        ]\n                    ) + (\n                        x_sobel[1][1] * pixels[\n                            y_offset + \n                            x_offset +\n                            k\n                        ]\n                    ) + (\n                        x_sobel[1][2] * pixels[\n                            y_offset + \n                            x_offset + 4 +\n                            k\n                        ]\n                    ) + (\n                        x_sobel[2][0] * pixels[\n                            y_offset + row_offset + \n                            x_offset - 4 +\n                            k\n                        ]\n                    ) + (\n                        \n                        x_sobel[2][1] * pixels[\n                            y_offset + row_offset + \n                            x_offset +\n                            k\n                        ]\n                    ) + (\n                        x_sobel[2][2] * pixels[\n                            y_offset + row_offset + \n                            x_offset + 4 +\n                            k\n                        ]\n                    );\n      \n         \n                    const pixel_y = \n                    (\n                        y_sobel[0][0] * pixels[\n                            y_offset - row_offset + \n                            x_offset - 4 +\n                            k\n                        ]\n                    ) + (\n                        y_sobel[0][1] * pixels[\n                            y_offset - row_offset + \n                            x_offset +\n                            k\n                        ]\n                    ) + (\n                        y_sobel[0][2] * pixels[\n                            y_offset - row_offset + \n                            x_offset + 4 +\n                            k\n                        ]\n                    ) + (\n                        y_sobel[1][0] * pixels[\n                            y_offset + \n                            x_offset - 4 +\n                            k\n                        ]\n                    ) + (\n                        y_sobel[1][1] * pixels[\n                            y_offset + \n                            x_offset +\n                            k\n                        ]\n                    ) + (\n                        y_sobel[1][2] * pixels[\n                            y_offset + \n                            x_offset + 4 +\n                            k\n                        ]\n                    ) + (\n                        y_sobel[2][0] * pixels[\n                            y_offset + row_offset + \n                            x_offset - 4 +\n                            k\n                        ]\n                    ) + (\n                        y_sobel[2][1] * pixels[\n                            y_offset + row_offset + \n                            x_offset +\n                            k\n                        ]\n                    ) + (\n                        y_sobel[2][2] * pixels[\n                            y_offset + row_offset + \n                            x_offset + 4 +\n                            k\n                        ]\n                    );\n                \n                    const intensity = Math.ceil(Math.sqrt(\n                        (pixel_x * pixel_x) + (pixel_y * pixel_y)\n                    ));\n          \n                    output.data[y_offset + x_offset + k] = intensity;\n                }\n\n                output.data[y_offset + x_offset + 3] = 255;\n            }\n        }\n\n            // todo grayscale\n        return output;\n    }\n\n    getGrayscale(image) {\n        const original =  image;\n        const pixels = original.data; \n\n        const grayscale = this.context.createImageData(this.width, this.height);\n\n        for(var i = 0; i < pixels.length; i += 4) {\n            let intensity = 0.3 * pixels[i] + 0.59 * pixels[i + 1] + 0.11 * pixels[i + 2]; \n            \n            if (pixels[i + 3] === 0) {\n                intensity = 255;\n            }\n\n            grayscale.data[i] = intensity;\n            grayscale.data[i + 1] = intensity;\n            grayscale.data[i + 2] = intensity;\n            grayscale.data[i + 3] = 255;\n\n        }\n\n        return grayscale;  \n    }\n\n    thresholding(threshold) {\n        const input = this.getGrayscale(this.getImage());\n        const pixels = input.data; \n\n        const output = this.context.createImageData(this.width, this.height);\n\n        for(var i = 0; i < pixels.length; i += 4) {\n            const intensity = (pixels[i] >= threshold) ? 255 : 0; \n\n            output.data[i] = intensity;\n            output.data[i + 1] = intensity;\n            output.data[i + 2] = intensity;\n            output.data[i + 3] = 255;\n\n        }\n\n        return output;\n    }\n\n    drawImageData(imageData) {\n        console.log('drawImageData', imageData);\n        this.context.putImageData(imageData, 0, 0);\n    }\n\n    getImage() {\n        return this.image;\n    }\n\n    threshold() {\n        //\n    }\n}\n\nif (typeof module !== 'undefined') {\n    module.exports = MyCanvas;\n}\n\nif (typeof window !== 'undefined') {\n    window.MyCanvas = MyCanvas;\n}\n"],"sourceRoot":""}